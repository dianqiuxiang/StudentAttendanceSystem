<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
-->
    <mapper namespace="com.stuatdsys.cmis.dao.impl.ClassDaoImpl">
		<!-- 结果集 -->     
		   <!-- <resultMap id="tbl_classResult" type="tbl_class">   
		      <id property="id" column="id" />  
		      <result property="username" column="username"/>  -->
		      <!-- 多对一的关系，注意resultMap的名字为 引用的namespace+resultMap的Id -->  
		     <!--  <association property="teacher_id" column="teacher_id" javaType="Tbl_teacher" resultMap="com.stuatdsys.cmis.dao.impl.TeacherDaoImpl.teacherResult"/>  
		   </resultMap>   -->
		      
		   <!-- 新增tbl_class实体类 -->  
		    <insert id="insert" parameterType="tbl_class">  
		        insert into tbl_class (class_No, class_Name, 
			      department_Id, teacher_Id, create_Time, 
			      update_Time)
			    values ( #{class_No,jdbcType=VARCHAR}, #{class_Name,jdbcType=VARCHAR}, 
			      #{department_Id,jdbcType=INTEGER}, #{teacher_Id,jdbcType=INTEGER}, #{create_Time,jdbcType=VARCHAR}, 
			      #{update_Time,jdbcType=VARCHAR})
		   </insert>  		    
		     
		   <!-- 批量插入 -->  
		   <insert id="insertBatch" parameterType="arraylist">  
		        insert into tbl_user (class_No, class_Name, 
			      department_Id, teacher_Id, create_Time, 
			      update_Time)
			    values    
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        <foreach collection="list" item="item"  index="index" separator=",">
        			<trim prefix=" (" suffix=")" suffixOverrides=",">	        		 
				        #{item.class_No,jdbcType=VARCHAR}, #{item.class_Name,jdbcType=VARCHAR}, 
			      		#{item.department_Id,jdbcType=INTEGER}, #{item.teacher_Id,jdbcType=INTEGER}, 
			      		#{item.create_Time,jdbcType=VARCHAR},#{item.update_Time,jdbcType=VARCHAR}       
		        	</trim>   
           		</foreach>		
		   </insert>
		     
		   <!-- 更新对象 -->  
		   <update id="update" parameterType="tbl_class">  
		      	 update tbl_class
				    <set >
				      <if test="class_No != null" >
				        class_No = #{class_No,jdbcType=VARCHAR},
				      </if>
				      <if test="class_Name != null" >
				        class_Name = #{class_Name,jdbcType=VARCHAR},
				      </if>
				      <if test="department_Id != null" >
				        department_Id = #{department_Id,jdbcType=INTEGER},
				      </if>
				      <if test="teacher_Id != null" >
				        teacher_Id = #{teacher_Id,jdbcType=INTEGER},
				      </if>
				      <if test="create_Time != null" >
				        create_Time = #{create_Time,jdbcType=VARCHAR},
				      </if>
				      <if test="update_Time != null" >
				        update_Time = #{update_Time,jdbcType=VARCHAR},
				      </if>
				    </set>
				    where id = #{id,jdbcType=INTEGER}
		   </update>		   
		     
		   <!-- 更新对象（自定义范围） -->  
		    <update id="updateFields" parameterType="java.util.Map">  
		      update tbl_class   
		      <set>  
			    <foreach collection="fields.entrySet()" index="key" item="value" separator=","> 			  
			        ${key} = #{value}  
			    </foreach>  
			  </set>  
			  <where>
			  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
			        ${key} = #{value} 
			    </foreach> 
              </where>  
		   </update>  
		     
		    <!-- 批量更新 -->  
		   <update id="updateBatch" parameterType="java.util.List">  
		        <!-- collection可以是List对于list,数组对于array,Map对应ids -->
		        update tbl_class
			        <trim prefix="set" suffixOverrides=",">
			            <trim prefix="class_No = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.class_No !=null">
			                         when id=#{item.id} then #{item.class_No,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="class_Name = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.class_Name !=null">
			                         when id=#{item.id} then #{item.class_Name,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="department_Id = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.department_Id !=null">
			                         when id=#{item.id} then #{item.department_Id,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="teacher_Id = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.teacher_Id !=null">
			                         when id=#{item.id} then #{item.teacher_Id,jdbcType=INTEGER}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="create_Time = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.create_Time !=null">
			                         when id=#{item.id} then #{item.create_Time,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			            
			            <trim prefix="update_Time = case" suffix="end,">
			                 <foreach collection="list" item="item" index="index">
			                     <if test="item.update_Time !=null">
			                         when id=#{item.id} then #{item.update_Time,jdbcType=VARCHAR}
			                     </if>
			                 </foreach>
			            </trim>
			        </trim>
			        where id in
			        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
			            #{item.id,jdbcType=INTEGER}
			        </foreach>
		   </update>  
		     
		   <!-- 根据主键删除 -->  
		   <delete id="deletePK" parameterType="int">  
		        delete from tbl_class where id = #{id}  
		   </delete>  
		     
		   <!-- 根据参数删除 -->  
		   <delete id="deleteParam" parameterType="java.util.Map">  
		        delete from tbl_class  
				  <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where>   
		   </delete>  
		     
		   <!-- 批量删除 -->  
		   <delete id="deleteBatch">  
		        delete from tbl_class where id in   
		        <trim prefix="(" suffix=")" suffixOverrides=",">  
		            <foreach collection="list" item="pk" separator=",">  
		                #{pk}  
		            </foreach>  
		        </trim>  
		   </delete>  
		   
		   <!-- 整表内容删除 -->  
		   <delete id="truncate">  
		        delete from tbl_class 
		   </delete>  
		     
		   <!-- count -->  
		   <select id="count" resultType="int">  
		        select count(*) from tbl_class e   
		  </select>  
		  <select id="countParam" parameterType="java.util.Map" resultType="int">  
		        select count(*) from tbl_class e   
		        <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	              </where> 
		  </select>
		  
		  <!-- 查询 -->  
		   <select id="select" parameterType="Integer" resultType="tbl_class">  
		        select * from tbl_class
		   </select>
		  
		   <!-- 查询（参数） -->  
		   <select id="selectPk" parameterType="Integer" resultType="tbl_class">  
		        select * from tbl_class   where id = #{id} 
		   </select>  
		    
		   <!-- 查询（参数） -->  
		   <select id="selectParam" parameterType="java.util.Map" resultType="tbl_class">  
		        select * from tbl_class   
		       <where>
				  	<foreach collection="where.entrySet()" index="key" item="value" separator="and">
				        ${key} = #{value} 
				    </foreach> 
	           </where> 
		   </select>
    </mapper>